{"ast":null,"code":"import _classCallCheck from \"C:\\\\SHILPA\\\\udacity\\\\project-8\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\SHILPA\\\\udacity\\\\project-8\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\SHILPA\\\\udacity\\\\project-8\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\SHILPA\\\\udacity\\\\project-8\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\SHILPA\\\\udacity\\\\project-8\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\SHILPA\\\\udacity\\\\project-8\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      sites: []\n    };\n\n    _this.showMap = function () {\n      addJsScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBfiZP_S5wpf3AHIkbVcVEnqcWgDRcGYRY&callback=initMap\");\n      window.initMap = _this.initMap;\n    };\n\n    _this.getLocations = function () {\n      var baseUrl = \"https://api.foursquare.com/v2/venues/search?\";\n      var params = {\n        client_id: \"RMUZLEACYYV2TOWXVNFTDFOTV11JTY4X3U4KKNDXMLDY2423\",\n        client_secret: \"4AMQJSZIFGDXNKNIC120UOOMADB3CTJVDHZYOYB5Y2M2ITPX\",\n        query: \"coffee\",\n        ll: \"33.75,-84.38\",\n        near: \"Atlanta\",\n        v: \"20181120\" //Performing a GET request\n\n      };\n      axios.get(baseUrl + new URLSearchParams(params)).then(function (response) {\n        _this.setState({\n          sites: response.data.response.venues\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.initMap = function () {\n      var map = new window.google.maps.Map(document.getElementById('map'), {\n        center: {\n          lat: 33.247875,\n          lng: -83.441162\n        },\n        zoom: 9\n      }); //Create info window\n\n      var infowindow = new window.google.maps.InfoWindow(); //loop over each site present in the sites array we have run a foreach/map\n\n      _this.state.sites.map(function (favCoffeeSite) {\n        var contentString = \"\".concat(favCoffeeSite.name); //create a marker for each site\n\n        var marker = new window.google.maps.Marker({\n          position: {\n            lat: favCoffeeSite.location.lat,\n            lng: favCoffeeSite.location.lng\n          },\n          map: map,\n          title: favCoffeeSite.name\n        }); //https://developers.google.com/maps/documentation/javascript/examples/infowindow-simple\n\n        marker.addListener('click', function () {\n          infowindow.setContent(contentString);\n          infowindow.open(map, marker);\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    //calling the function\n    value: function componentDidMount() {\n      this.getLocations();\n      this.showMap();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component); //call the javascript lib\n\n\nfunction addJsScript(url) {\n  var firstItem = window.document.getElementsByTagName(\"script\")[0];\n  var secondItem = window.document.createElement(\"script\");\n  secondItem.src = url;\n  secondItem.async = true;\n  secondItem.defer = true;\n  firstItem.parentNode.insertBefore(secondItem, firstItem);\n}\n\nexport default App; //my api key AIzaSyBfiZP_S5wpf3AHIkbVcVEnqcWgDRcGYRY\n//Client ID RMUZLEACYYV2TOWXVNFTDFOTV11JTY4X3U4KKNDXMLDY2423\n//Client Secret 4AMQJSZIFGDXNKNIC120UOOMADB3CTJVDHZYOYB5Y2M2ITPX","map":{"version":3,"sources":["C:\\SHILPA\\udacity\\project-8\\src\\App.js"],"names":["React","Component","axios","App","state","sites","showMap","addJsScript","window","initMap","getLocations","baseUrl","params","client_id","client_secret","query","ll","near","v","get","URLSearchParams","then","response","setState","data","venues","catch","error","console","log","map","google","maps","Map","document","getElementById","center","lat","lng","zoom","infowindow","InfoWindow","favCoffeeSite","contentString","name","marker","Marker","position","location","title","addListener","setContent","open","url","firstItem","getElementsByTagName","secondItem","createElement","src","async","defer","parentNode","insertBefore"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UAGNC,K,GAAQ;AACPC,MAAAA,KAAK,EAAE;AADA,K;;UASRC,O,GAAU,YAAM;AACfC,MAAAA,WAAW,CAAC,sGAAD,CAAX;AACAC,MAAAA,MAAM,CAACC,OAAP,GAAiB,MAAKA,OAAtB;AACA,K;;UAGDC,Y,GAAe,YAAM;AACpB,UAAMC,OAAO,GAAG,8CAAhB;AACA,UAAMC,MAAM,GAAG;AACdC,QAAAA,SAAS,EAAE,kDADG;AAEdC,QAAAA,aAAa,EAAE,kDAFD;AAGdC,QAAAA,KAAK,EAAE,QAHO;AAIdC,QAAAA,EAAE,EAAC,cAJW;AAKdC,QAAAA,IAAI,EAAE,SALQ;AAMdC,QAAAA,CAAC,EAAE,UANW,CAShB;;AATgB,OAAf;AAUDhB,MAAAA,KAAK,CAACiB,GAAN,CAAUR,OAAO,GAAG,IAAIS,eAAJ,CAAoBR,MAApB,CAApB,EACCS,IADD,CACM,UAAAC,QAAQ,EAAI;AACjB,cAAKC,QAAL,CAAc;AACblB,UAAAA,KAAK,EAAEiB,QAAQ,CAACE,IAAT,CAAcF,QAAd,CAAuBG;AADjB,SAAd;AAGA,OALD,EAMCC,KAND,CAMO,UAAAC,KAAK,EAAI;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,OARD;AASC,K;;UAKDlB,O,GAAU,YAAM;AACf,UAAMqB,GAAG,GAAG,IAAItB,MAAM,CAACuB,MAAP,CAAcC,IAAd,CAAmBC,GAAvB,CAA2BC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAA3B,EACZ;AACCC,QAAAA,MAAM,EAAE;AAACC,UAAAA,GAAG,EAAE,SAAN;AAAiBC,UAAAA,GAAG,EAAE,CAAC;AAAvB,SADT;AAECC,QAAAA,IAAI,EAAE;AAFP,OADY,CAAZ,CADe,CAOT;;AACA,UAAMC,UAAU,GAAG,IAAIhC,MAAM,CAACuB,MAAP,CAAcC,IAAd,CAAmBS,UAAvB,EAAnB,CARS,CAUV;;AACA,YAAKrC,KAAL,CAAWC,KAAX,CAAiByB,GAAjB,CAAqB,UAAAY,aAAa,EAAG;AAEpC,YAAMC,aAAa,aAAMD,aAAa,CAACE,IAApB,CAAnB,CAFoC,CAGvC;;AACA,YAAMC,MAAM,GAAG,IAAIrC,MAAM,CAACuB,MAAP,CAAcC,IAAd,CAAmBc,MAAvB,CAA8B;AAC5CC,UAAAA,QAAQ,EAAE;AAACV,YAAAA,GAAG,EAAEK,aAAa,CAACM,QAAd,CAAuBX,GAA7B;AAAkCC,YAAAA,GAAG,EAAEI,aAAa,CAACM,QAAd,CAAuBV;AAA9D,WADkC;AAE5CR,UAAAA,GAAG,EAAEA,GAFuC;AAG5CmB,UAAAA,KAAK,EAAEP,aAAa,CAACE;AAHuB,SAA9B,CAAf,CAJuC,CAU1C;;AACAC,QAAAA,MAAM,CAACK,WAAP,CAAmB,OAAnB,EAA4B,YAAW;AAEtCV,UAAAA,UAAU,CAACW,UAAX,CAAsBR,aAAtB;AAEAH,UAAAA,UAAU,CAACY,IAAX,CAAgBtB,GAAhB,EAAqBe,MAArB;AACA,SALD;AAMA,OAjBK;AAkBH,K;;;;;;;AAnEH;wCACmB;AAClB,WAAKnC,YAAL;AACA,WAAKJ,OAAL;AACA;;;6BAiEU;AACR,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADD;AAKA;;;;EAjFeL,S,GAoFlB;;;AACA,SAASM,WAAT,CAAqB8C,GAArB,EAA0B;AACzB,MAAMC,SAAS,GAAG9C,MAAM,CAAC0B,QAAP,CAAgBqB,oBAAhB,CAAqC,QAArC,EAA+C,CAA/C,CAAlB;AACA,MAAMC,UAAU,GAAGhD,MAAM,CAAC0B,QAAP,CAAgBuB,aAAhB,CAA8B,QAA9B,CAAnB;AACAD,EAAAA,UAAU,CAACE,GAAX,GAAgBL,GAAhB;AACAG,EAAAA,UAAU,CAACG,KAAX,GAAmB,IAAnB;AACAH,EAAAA,UAAU,CAACI,KAAX,GAAmB,IAAnB;AACAN,EAAAA,SAAS,CAACO,UAAV,CAAqBC,YAArB,CAAkCN,UAAlC,EAA8CF,SAA9C;AACA;;AAED,eAAenD,GAAf,C,CAEA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n\n//Use data in different places use state\nstate = {\n\tsites: []\n};\n//calling the function\ncomponentDidMount(){\n\tthis.getLocations()\n\tthis.showMap()\n}\n\nshowMap = () => {\n\taddJsScript(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBfiZP_S5wpf3AHIkbVcVEnqcWgDRcGYRY&callback=initMap\")\n\twindow.initMap = this.initMap\n}\n\n//get the base url and append the query parameter to it find th exact lat and long in form of json abject\ngetLocations = () => {\n\tconst baseUrl = \"https://api.foursquare.com/v2/venues/search?\"\n\tconst params = {\n\t\tclient_id: \"RMUZLEACYYV2TOWXVNFTDFOTV11JTY4X3U4KKNDXMLDY2423\",\n\t\tclient_secret: \"4AMQJSZIFGDXNKNIC120UOOMADB3CTJVDHZYOYB5Y2M2ITPX\",\n\t\tquery: \"coffee\",\n\t\tll:\"33.75,-84.38\",\n\t\tnear: \"Atlanta\",\n\t\tv: \"20181120\"\n\t}\n\n//Performing a GET request\naxios.get(baseUrl + new URLSearchParams(params))\n.then(response => {\n\tthis.setState({\n\t\tsites: response.data.response.venues\n\t})   \n})\n.catch(error => {\n\tconsole.log(error)\n})\n}\n\n\n//https://developers.google.com/maps/documentation/javascript/tutorial\n//lat and long of georgia state\ninitMap = () => {\n\tconst map = new window.google.maps.Map(document.getElementById('map'), \n\t{\n\t\tcenter: {lat: 33.247875, lng: -83.441162},\n\t\tzoom: 9\n\t})\n\n      \t//Create info window\n      \tconst infowindow = new window.google.maps.InfoWindow()\n      \t\n      //loop over each site present in the sites array we have run a foreach/map\n      this.state.sites.map(favCoffeeSite =>{\n\n      \tconst contentString = `${favCoffeeSite.name}`\n    //create a marker for each site\n    const marker = new window.google.maps.Marker({\n    \tposition: {lat: favCoffeeSite.location.lat, lng: favCoffeeSite.location.lng},\n    \tmap: map,\n    \ttitle: favCoffeeSite.name,\n    })\n\n\t//https://developers.google.com/maps/documentation/javascript/examples/infowindow-simple\n\tmarker.addListener('click', function() {\n\n\t\tinfowindow.setContent(contentString);\t\n\n\t\tinfowindow.open(map, marker);\n\t})\n})\n  }\n\n  render() {\n  \treturn ( \n  \t\t<main>\n  \t\t<div id=\"map\"></div>\n  \t\t</main>\n  \t\t)\n  }\n}\n\n//call the javascript lib\nfunction addJsScript(url) {\n\tconst firstItem = window.document.getElementsByTagName(\"script\")[0]\n\tconst secondItem = window.document.createElement(\"script\")\n\tsecondItem.src= url\n\tsecondItem.async = true\n\tsecondItem.defer = true\n\tfirstItem.parentNode.insertBefore(secondItem, firstItem)\n}\n\nexport default App;\n\n//my api key AIzaSyBfiZP_S5wpf3AHIkbVcVEnqcWgDRcGYRY\n//Client ID RMUZLEACYYV2TOWXVNFTDFOTV11JTY4X3U4KKNDXMLDY2423\n//Client Secret 4AMQJSZIFGDXNKNIC120UOOMADB3CTJVDHZYOYB5Y2M2ITPX"]},"metadata":{},"sourceType":"module"}